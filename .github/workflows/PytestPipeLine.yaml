name: Run webapp and Selenium tests

on:
  push:
    branches: ["test", "dockerTest"]
  pull_request:
    branches: ["test"]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install system dependencies (Chrome)
        run: |
          sudo apt-get update
          # Chrome
          sudo apt-get install -y google-chrome-stable

      - name: Setup Microsoft Edge
        uses: browser-actions/setup-edge@v1
        with:
          edge-version: stable

      - name: Install Firefox (from Mozilla PPA)
        run: |
          sudo add-apt-repository -y ppa:mozillateam/ppa
          sudo apt-get update
          sudo apt-get install -y firefox-esr

      - name: Install Firefox dependencies
        run: |
          sudo apt-get install -y \
          xvfb \
          libdbus-glib-1-2 \
          libxt6 \
          libgtk-3-0 \
          libasound2t64

      # ChromeDriver
      - name: Install ChromeDriver
        uses: nanasess/setup-chromedriver@v2

      # GeckoDriver (para Firefox)

      # EdgeDriver (opcional si lo activas despuÃ©s)
      # - name: Install EdgeDriver
      #   run: |
      #     EDGE_VERSION=$(microsoft-edge --version | awk '{print $3}')
      #     wget "https://msedgedriver.azureedge.net/${EDGE_VERSION}/edgedriver_linux64.zip"
      #     unzip edgedriver_linux64.zip
      #     sudo mv msedgedriver /usr/local/bin/

      - name: Install Python dependencies
        working-directory: ./e2e-tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest selenium webdriver-manager

      - name: Install and start React app
        working-directory: .
        run: |
          npm install
          npm run build
          nohup npm run preview &
          APP_PORT=4173
          echo "Waiting for React app to be ready..."
          for i in {1..30}; do
            if curl -s http://localhost:$APP_PORT > /dev/null; then
              echo "App is up!"
              break
            fi
            echo "Waiting for app... ($i)"
            sleep 2
          done

      - name: Run pytest in chrome
        working-directory: ./e2e-tests
        env:
          PYTHONUNBUFFERED: 1
        run: pytest tests/test_landing_page.py::test_landing_page_heading
        continue-on-error: true

      - name: Run pytest in firefox
        working-directory: ./e2e-tests
        env:
          PYTHONUNBUFFERED: 1
        run: pytest tests/test_landing_page.py::test_landing_page_heading --browser=firefox
        continue-on-error: true

      - name: Run pytest in edge
        working-directory: ./e2e-tests
        env:
          PYTHONUNBUFFERED: 1
        run: pytest tests/test_landing_page.py::test_landing_page_heading --browser=edge
