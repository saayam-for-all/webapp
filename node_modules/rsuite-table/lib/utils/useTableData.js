'use client';
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports["default"] = void 0;
var _react = require("react");
var _useUpdateEffect = _interopRequireDefault(require("./useUpdateEffect"));
var _flattenData = _interopRequireDefault(require("./flattenData"));
var _findAllParents = _interopRequireDefault(require("./findAllParents"));
var _shouldShowRowByExpanded = _interopRequireDefault(require("./shouldShowRowByExpanded"));
var _constants = require("../constants");
/**
 * Filter those expanded nodes.
 * @param data
 * @param expandedRowKeys
 * @param rowKey
 * @returns
 */
var filterTreeData = function filterTreeData(data, expandedRowKeys, rowKey) {
  return (0, _flattenData["default"])(data).filter(function (rowData) {
    if (rowKey) {
      var parents = (0, _findAllParents["default"])(rowData, rowKey);
      var expanded = (0, _shouldShowRowByExpanded["default"])(expandedRowKeys, parents);

      // FIXME This function is supposed to be pure.
      //       Don't mutate rowData in-place!
      rowData[_constants.EXPANDED_KEY] = expanded;
      rowData[_constants.TREE_DEPTH] = parents.length;
      return expanded;
    }
  });
};
function useTableData(props) {
  var data = props.data,
    isTree = props.isTree,
    expandedRowKeys = props.expandedRowKeys,
    rowKey = props.rowKey;
  var _useState = (0, _react.useState)(function () {
      return isTree ? filterTreeData(data, expandedRowKeys, rowKey) : data;
    }),
    tableData = _useState[0],
    setData = _useState[1];
  (0, _useUpdateEffect["default"])(function () {
    setData(isTree ? filterTreeData(data, expandedRowKeys, rowKey) : data);
  }, [data, expandedRowKeys, rowKey, isTree]);
  return tableData;
}
var _default = exports["default"] = useTableData;