// Generated by script, please do not edit this file.
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
import * as React from 'react';
import { forwardRef } from 'react';
var Indirect = function(props, ref) {
    return /*#__PURE__*/ React.createElement("svg", _object_spread({
        xmlns: "http://www.w3.org/2000/svg",
        width: "1em",
        height: "1em",
        viewBox: "0 0 16 16",
        fill: "currentColor",
        ref: ref
    }, props), /*#__PURE__*/ React.createElement("path", {
        d: "M14.5 6a1.5 1.5 0 1 1-.001 3.001A1.5 1.5 0 0 1 14.5 6m0 1a.5.5 0 1 0 0 1 .5.5 0 0 0 0-1m-13-1a1.5 1.5 0 1 1-.001 3.001A1.5 1.5 0 0 1 1.5 6m0 1a.5.5 0 1 0 0 1 .5.5 0 0 0 0-1"
    }), /*#__PURE__*/ React.createElement("path", {
        d: "M9.75 2a2.25 2.25 0 0 1 2.245 2.096L12 4.25V6.5a.5.5 0 0 0 .41.492L12.5 7h1a.5.5 0 0 1 .09.992L13.5 8h-1a1.5 1.5 0 0 1-1.493-1.356L11 6.5V4.25a1.25 1.25 0 0 0-2.494-.128L8.5 4.25v7.5a2.25 2.25 0 0 1-4.495.154L4 11.75V8.5a.5.5 0 0 0-.41-.492L3.5 8h-1a.5.5 0 0 1-.09-.992L2.5 7h1a1.5 1.5 0 0 1 1.493 1.356L5 8.5v3.25a1.25 1.25 0 0 0 2.494.128l.006-.128v-7.5A2.25 2.25 0 0 1 9.75 2"
    }));
};
var ForwardRef = /*#__PURE__*/ forwardRef(Indirect);
export default ForwardRef;
