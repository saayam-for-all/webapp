/**
 *
 * @this {import('../driver').AndroidDriver}
 * @param {import('./types').StartScreenRecordingOpts} [options={}]
 * @returns {Promise<string>}
 */
export function startRecordingScreen(this: import("../driver").AndroidDriver, options?: import("./types").StartScreenRecordingOpts): Promise<string>;
export class startRecordingScreen {
    /**
     *
     * @this {import('../driver').AndroidDriver}
     * @param {import('./types').StartScreenRecordingOpts} [options={}]
     * @returns {Promise<string>}
     */
    constructor(this: import("../driver").AndroidDriver, options?: import("./types").StartScreenRecordingOpts);
    _screenRecordingProperties: {
        timer: timing.Timer;
        videoSize: string | undefined;
        timeLimit: string | number;
        currentTimeLimit: string | number;
        bitRate: string | number | undefined;
        bugReport: boolean | undefined;
        records: never[];
        recordingProcess: null;
        stopped: boolean;
    };
}
/**
 *
 * @this {import('../driver').AndroidDriver}
 * @param {import('./types').StopScreenRecordingOpts} [options={}]
 * @returns {Promise<string>}
 */
export function stopRecordingScreen(this: import("../driver").AndroidDriver, options?: import("./types").StopScreenRecordingOpts): Promise<string>;
export class stopRecordingScreen {
    /**
     *
     * @this {import('../driver').AndroidDriver}
     * @param {import('./types').StopScreenRecordingOpts} [options={}]
     * @returns {Promise<string>}
     */
    constructor(this: import("../driver").AndroidDriver, options?: import("./types").StopScreenRecordingOpts);
    _screenRecordingProperties: any;
}
export type ADB = import("appium-adb").ADB;
import { timing } from '@appium/support';
//# sourceMappingURL=recordscreen.d.ts.map