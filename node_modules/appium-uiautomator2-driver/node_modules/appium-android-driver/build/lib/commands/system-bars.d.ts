/**
 * @this {import('../driver').AndroidDriver}
 * @returns {Promise<StringRecord>}
 */
export function getSystemBars(this: import("../driver").AndroidDriver): Promise<StringRecord>;
/**
 * @this {import('../driver').AndroidDriver}
 * @param {import('./types').StatusBarCommand} command Each list
 * item must separated with a new line (`\n`) character.
 * @param {string} [component] The name of the tile component.
 * It is only required for `(add|remove|click)Tile` commands.
 * Example value: `com.package.name/.service.QuickSettingsTileComponent`
 * @returns {Promise<string>}
 */
export function mobilePerformStatusBarCommand(this: import("../driver").AndroidDriver, command: import("./types").StatusBarCommand, component?: string): Promise<string>;
/**
 * Parses window properties from adb dumpsys output
 *
 * @this {import('../driver').AndroidDriver}
 * @param {string} name The name of the window whose properties are being parsed
 * @param {Array<string>} props The list of particular window property lines.
 * Check the corresponding unit tests for more details on the input format.
 * @returns {WindowProperties} Parsed properties object
 * @throws {Error} If there was an issue while parsing the properties string
 */
export function parseWindowProperties(this: import("../driver").AndroidDriver, name: string, props: Array<string>): WindowProperties;
/**
 * Extracts status and navigation bar information from the window manager output.
 *
 * @this {import('../driver').AndroidDriver}
 * @param {string} lines Output from dumpsys command.
 * Check the corresponding unit tests for more details on the input format.
 * @return {StringRecord} An object containing two items where keys are statusBar and navigationBar,
 * and values are corresponding WindowProperties objects
 * @throws {Error} If no window properties could be parsed
 */
export function parseWindows(this: import("../driver").AndroidDriver, lines: string): StringRecord;
export type ADB = import("appium-adb").ADB;
export type StringRecord = import("@appium/types").StringRecord;
export type WindowProperties = import("./types").WindowProperties;
//# sourceMappingURL=system-bars.d.ts.map