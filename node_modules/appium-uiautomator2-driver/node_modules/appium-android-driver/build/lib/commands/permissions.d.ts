/**
 * @this {import('../driver').AndroidDriver}
 * @param {string | string[]} permissions If `target` is set to 'pm':
 *  The full name of the permission to be changed
 * or a list of permissions. Check https://developer.android.com/reference/android/Manifest.permission
 * to get the full list of standard Android permssion names. Mandatory argument.
 * If 'all' magic string is passed then the chosen action is going to be applied to all
 * permisisons requested/granted by 'appPackage'.
 * If `target` is set to 'appops':
 * The full name of the appops permission to be changed
 * or a list of permissions. Check AppOpsManager.java sources to get the full list of
 * available appops permission names. Mandatory argument.
 * Examples: 'ACTIVITY_RECOGNITION', 'SMS_FINANCIAL_TRANSACTIONS', 'READ_SMS', 'ACCESS_NOTIFICATIONS'.
 * The 'all' magic string is unsupported.
 * @param {string} [appPackage] The application package to set change permissions on. Defaults to the
 * package name under test
 * @param {string} [action] One of `PM_ACTION` values if `target` is set to 'pm', otherwise
 * one of `APPOPS_ACTION` values
 * @param {'pm' | 'appops'} [target='pm'] Either 'pm' or 'appops'. The 'appops' one requires
 * 'adb_shell' server security option to be enabled.
 */
export function mobileChangePermissions(this: import("../driver").AndroidDriver, permissions: string | string[], appPackage?: string, action?: string, target?: "pm" | "appops"): Promise<any>;
/**
 * @this {import('../driver').AndroidDriver}
 * @param {string} [type='requested'] One of possible permission types to get.
 * @param {string} [appPackage] The application package to set change permissions on.
 * Defaults to the package name under test
 * @returns {Promise<string[]>}
 */
export function mobileGetPermissions(this: import("../driver").AndroidDriver, type?: string, appPackage?: string): Promise<string[]>;
export type ADB = import("appium-adb").ADB;
export type AndroidDriver = import("../driver").AndroidDriver;
//# sourceMappingURL=permissions.d.ts.map