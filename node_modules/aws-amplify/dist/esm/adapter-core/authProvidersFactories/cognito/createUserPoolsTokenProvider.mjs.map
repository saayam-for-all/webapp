{"version":3,"file":"createUserPoolsTokenProvider.mjs","sources":["../../../../../src/adapter-core/authProvidersFactories/cognito/createUserPoolsTokenProvider.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { DefaultTokenStore, TokenOrchestrator, refreshAuthTokensWithoutDedupe, } from '@aws-amplify/auth/cognito';\n/**\n * Creates an object that implements {@link TokenProvider}.\n * @param authConfig The Auth config that the credentials provider needs to function.\n * @param keyValueStorage An object that implements the {@link KeyValueStorageInterface}.\n * @returns An object that implements {@link TokenProvider}.\n */\nexport const createUserPoolsTokenProvider = (authConfig, keyValueStorage) => {\n    const authTokenStore = new DefaultTokenStore();\n    authTokenStore.setAuthConfig(authConfig);\n    authTokenStore.setKeyValueStorage(keyValueStorage);\n    const tokenOrchestrator = new TokenOrchestrator();\n    tokenOrchestrator.setAuthConfig(authConfig);\n    tokenOrchestrator.setAuthTokenStore(authTokenStore);\n    tokenOrchestrator.setTokenRefresher(refreshAuthTokensWithoutDedupe);\n    return {\n        getTokens: ({ forceRefresh } = { forceRefresh: false }) => tokenOrchestrator.getTokens({ forceRefresh }),\n    };\n};\n"],"names":[],"mappings":";;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,4BAA4B,GAAG,CAAC,UAAU,EAAE,eAAe,KAAK;AAC7E,IAAI,MAAM,cAAc,GAAG,IAAI,iBAAiB,EAAE,CAAC;AACnD,IAAI,cAAc,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;AAC7C,IAAI,cAAc,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;AACvD,IAAI,MAAM,iBAAiB,GAAG,IAAI,iBAAiB,EAAE,CAAC;AACtD,IAAI,iBAAiB,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;AAChD,IAAI,iBAAiB,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;AACxD,IAAI,iBAAiB,CAAC,iBAAiB,CAAC,8BAA8B,CAAC,CAAC;AACxE,IAAI,OAAO;AACX,QAAQ,SAAS,EAAE,CAAC,EAAE,YAAY,EAAE,GAAG,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,iBAAiB,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,CAAC;AAChH,KAAK,CAAC;AACN;;;;"}