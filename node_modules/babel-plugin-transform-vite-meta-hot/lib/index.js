"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = viteMetaHotBabelPlugin;
function viteMetaHotBabelPlugin({
  template,
  types: t
}) {
  return {
    name: 'vite-meta-hot',
    visitor: {
      MemberExpression(path) {
        const isMetaProperty = t.isMetaProperty(path.node.object);
        const isHotVar = t.isIdentifier(path.node.property) && path.node.property.name === 'hot';
        if (!isMetaProperty || !isHotVar) {
          return;
        }
        path.replaceWith(template.expression.ast('module.hot'));
      },
      StringLiteral(path) {
        const isMetaProperty = t.isMemberExpression(path.parentPath.node) && t.isMetaProperty(path.parentPath.node.object);
        const isHotVar = path.node.value === 'hot';
        if (!isMetaProperty || !isHotVar) {
          return;
        }
        path.parentPath.replaceWith(template.expression.ast('module.hot'));
      },
      Identifier(path) {
        var _path$scope$getBindin, _path$scope$getBindin2;
        if (!t.isMemberExpression(path.parentPath.node) || !t.isMetaProperty(path.parentPath.node.object)) {
          return;
        }
        const key = path.node.name;
        /* @ts-expect-error outdated types */
        // eslint-disable-next-line
        const keyValue = (_path$scope$getBindin = path.scope.getBinding(key)) == null ? void 0 : (_path$scope$getBindin2 = _path$scope$getBindin.path.node.init) == null ? void 0 : _path$scope$getBindin2.value;
        if (keyValue !== 'hot') {
          return;
        }
        path.parentPath.replaceWith(template.expression.ast('module.hot'));
      }
    }
  };
}