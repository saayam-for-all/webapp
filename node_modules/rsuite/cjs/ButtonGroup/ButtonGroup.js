'use client';
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _propTypes2 = require("../internals/propTypes");
var _hooks = require("../internals/hooks");
var _CustomProvider = require("../CustomProvider");
var _ButtonGroupContext = _interopRequireDefault(require("./ButtonGroupContext"));
var _excluded = ["as", "classPrefix", "role", "className", "children", "block", "vertical", "justified", "size"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * The ButtonGroup component is used to group a series of buttons together in a single line or column.
 * @see https://rsuitejs.com/components/button/#button-group
 */
var ButtonGroup = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {
  var _useCustom = (0, _CustomProvider.useCustom)('ButtonGroup', props),
    propsWithDefaults = _useCustom.propsWithDefaults;
  var _propsWithDefaults$as = propsWithDefaults.as,
    Component = _propsWithDefaults$as === void 0 ? 'div' : _propsWithDefaults$as,
    _propsWithDefaults$cl = propsWithDefaults.classPrefix,
    classPrefix = _propsWithDefaults$cl === void 0 ? 'btn-group' : _propsWithDefaults$cl,
    _propsWithDefaults$ro = propsWithDefaults.role,
    role = _propsWithDefaults$ro === void 0 ? 'group' : _propsWithDefaults$ro,
    className = propsWithDefaults.className,
    children = propsWithDefaults.children,
    block = propsWithDefaults.block,
    vertical = propsWithDefaults.vertical,
    justified = propsWithDefaults.justified,
    size = propsWithDefaults.size,
    rest = (0, _objectWithoutPropertiesLoose2.default)(propsWithDefaults, _excluded);
  var _useClassNames = (0, _hooks.useClassNames)(classPrefix),
    withClassPrefix = _useClassNames.withClassPrefix,
    merge = _useClassNames.merge;
  var classes = merge(className, withClassPrefix(size, {
    block: block,
    vertical: vertical,
    justified: justified
  }));
  var contextValue = (0, _react.useMemo)(function () {
    return {
      size: size
    };
  }, [size]);
  return /*#__PURE__*/_react.default.createElement(_ButtonGroupContext.default.Provider, {
    value: contextValue
  }, /*#__PURE__*/_react.default.createElement(Component, (0, _extends2.default)({}, rest, {
    role: role,
    ref: ref,
    className: classes
  }), children));
});
ButtonGroup.displayName = 'ButtonGroup';
ButtonGroup.propTypes = {
  className: _propTypes.default.string,
  as: _propTypes.default.elementType,
  classPrefix: _propTypes.default.string,
  children: _propTypes.default.node,
  block: _propTypes.default.bool,
  vertical: _propTypes.default.bool,
  justified: _propTypes.default.bool,
  role: _propTypes.default.string,
  size: (0, _propTypes2.oneOf)(['lg', 'md', 'sm', 'xs'])
};
var _default = exports.default = ButtonGroup;