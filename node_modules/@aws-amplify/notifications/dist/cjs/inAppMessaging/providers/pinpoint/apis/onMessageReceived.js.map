{"version":3,"file":"onMessageReceived.js","sources":["../../../../../../src/inAppMessaging/providers/pinpoint/apis/onMessageReceived.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onMessageReceived = void 0;\nconst eventListeners_1 = require(\"../../../../eventListeners\");\nconst utils_1 = require(\"../../../utils\");\n/**\n * Registers a callback that will be invoked on `messageReceived` events.\n *\n * @param {OnMessageReceivedInput} input - The input object that holds the callback handler.\n * @throws validation: {@link InAppMessagingValidationErrorCode} - Thrown when the provided parameters or library\n * configuration is incorrect, or if In App messaging hasn't been initialized.\n * @returns {OnMessageReceivedOutput} - An object that holds a remove method to stop listening to events.\n * @example\n * ```ts\n * onMessageReceived((message) => {\n *   // use the message\n *   console.log(message.id);\n * });\n * ```\n */\nfunction onMessageReceived(input) {\n    (0, utils_1.assertIsInitialized)();\n    return (0, eventListeners_1.addEventListener)('messageReceived', input);\n}\nexports.onMessageReceived = onMessageReceived;\n"],"names":[],"mappings":";;AACA;AACA;AACA,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,OAAO,CAAC,iBAAiB,GAAG,KAAK,CAAC,CAAC;AACnC,MAAM,gBAAgB,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAC;AAC/D,MAAM,OAAO,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB,CAAC,KAAK,EAAE;AAClC,IAAI,IAAI,OAAO,CAAC,mBAAmB,GAAG,CAAC;AACvC,IAAI,OAAO,IAAI,gBAAgB,CAAC,gBAAgB,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC;AAC5E,CAAC;AACD,OAAO,CAAC,iBAAiB,GAAG,iBAAiB;;"}