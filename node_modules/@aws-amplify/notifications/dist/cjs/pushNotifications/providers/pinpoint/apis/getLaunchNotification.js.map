{"version":3,"file":"getLaunchNotification.js","sources":["../../../../../../src/pushNotifications/providers/pinpoint/apis/getLaunchNotification.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLaunchNotification = void 0;\nconst utils_1 = require(\"@aws-amplify/core/internals/utils\");\n/**\n * Returns the notification which launched your app from a terminated state. The launch notification is consumed by\n * calls to this function and will yield a null result if:\n *   1. It is more than once (i.e. subsequent calls will be null)\n *   2. Another notification was opened while your app was running (either in foreground or background)\n *   3. Your app was brought back to the foreground by some other means (e.g. user tapped the app icon)\n *\n * @throws platform: {@link PlatformNotSupportedError} - Thrown if called against an unsupported platform. Currently,\n * only React Native is supported by this API.\n * @returns {Promise<GetLaunchNotificationOutput>} - a promise resolving to {@link PushNotificationMessage} if there is\n * a launch notification and `null` otherwise.\n * @example\n * ```ts\n * const launchNotification = await getLaunchNotification();\n * ```\n */\nconst getLaunchNotification = async () => {\n    throw new utils_1.PlatformNotSupportedError();\n};\nexports.getLaunchNotification = getLaunchNotification;\n"],"names":[],"mappings":";;AACA;AACA;AACA,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,OAAO,CAAC,qBAAqB,GAAG,KAAK,CAAC,CAAC;AACvC,MAAM,OAAO,GAAG,OAAO,CAAC,mCAAmC,CAAC,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qBAAqB,GAAG,YAAY;AAC1C,IAAI,MAAM,IAAI,OAAO,CAAC,yBAAyB,EAAE,CAAC;AAClD,CAAC,CAAC;AACF,OAAO,CAAC,qBAAqB,GAAG,qBAAqB;;"}