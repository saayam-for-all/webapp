{"version":3,"file":"errorHelpers.js","sources":["../../../../src/pushNotifications/errors/errorHelpers.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertIsInitialized = exports.assert = exports.PushNotificationValidationErrorCode = void 0;\nconst utils_1 = require(\"@aws-amplify/core/internals/utils\");\nconst initializationManager_1 = require(\"../utils/initializationManager\");\nconst PushNotificationError_1 = require(\"./PushNotificationError\");\nvar PushNotificationValidationErrorCode;\n(function (PushNotificationValidationErrorCode) {\n    PushNotificationValidationErrorCode[\"NoAppId\"] = \"NoAppId\";\n    PushNotificationValidationErrorCode[\"NoCredentials\"] = \"NoCredentials\";\n    PushNotificationValidationErrorCode[\"NoRegion\"] = \"NoRegion\";\n    PushNotificationValidationErrorCode[\"NotInitialized\"] = \"NotInitialized\";\n})(PushNotificationValidationErrorCode = exports.PushNotificationValidationErrorCode || (exports.PushNotificationValidationErrorCode = {}));\nconst pushNotificationValidationErrorMap = {\n    [PushNotificationValidationErrorCode.NoAppId]: {\n        message: 'Missing application id.',\n    },\n    [PushNotificationValidationErrorCode.NoCredentials]: {\n        message: 'Credentials should not be empty.',\n    },\n    [PushNotificationValidationErrorCode.NoRegion]: {\n        message: 'Missing region.',\n    },\n    [PushNotificationValidationErrorCode.NotInitialized]: {\n        message: 'Push notification has not been initialized.',\n        recoverySuggestion: 'Please make sure to first call `initializePushNotifications`.',\n    },\n};\nexports.assert = (0, utils_1.createAssertionFunction)(pushNotificationValidationErrorMap, PushNotificationError_1.PushNotificationError);\nconst assertIsInitialized = () => {\n    (0, exports.assert)((0, initializationManager_1.isInitialized)(), PushNotificationValidationErrorCode.NotInitialized);\n};\nexports.assertIsInitialized = assertIsInitialized;\n"],"names":[],"mappings":";;AACA;AACA;AACA,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,OAAO,CAAC,mBAAmB,GAAG,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,mCAAmC,GAAG,KAAK,CAAC,CAAC;AACpG,MAAM,OAAO,GAAG,OAAO,CAAC,mCAAmC,CAAC,CAAC;AAC7D,MAAM,uBAAuB,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;AAC1E,MAAM,uBAAuB,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC;AACnE,IAAI,mCAAmC,CAAC;AACxC,CAAC,UAAU,mCAAmC,EAAE;AAChD,IAAI,mCAAmC,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;AAC/D,IAAI,mCAAmC,CAAC,eAAe,CAAC,GAAG,eAAe,CAAC;AAC3E,IAAI,mCAAmC,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC;AACjE,IAAI,mCAAmC,CAAC,gBAAgB,CAAC,GAAG,gBAAgB,CAAC;AAC7E,CAAC,EAAE,mCAAmC,GAAG,OAAO,CAAC,mCAAmC,KAAK,OAAO,CAAC,mCAAmC,GAAG,EAAE,CAAC,CAAC,CAAC;AAC5I,MAAM,kCAAkC,GAAG;AAC3C,IAAI,CAAC,mCAAmC,CAAC,OAAO,GAAG;AACnD,QAAQ,OAAO,EAAE,yBAAyB;AAC1C,KAAK;AACL,IAAI,CAAC,mCAAmC,CAAC,aAAa,GAAG;AACzD,QAAQ,OAAO,EAAE,kCAAkC;AACnD,KAAK;AACL,IAAI,CAAC,mCAAmC,CAAC,QAAQ,GAAG;AACpD,QAAQ,OAAO,EAAE,iBAAiB;AAClC,KAAK;AACL,IAAI,CAAC,mCAAmC,CAAC,cAAc,GAAG;AAC1D,QAAQ,OAAO,EAAE,6CAA6C;AAC9D,QAAQ,kBAAkB,EAAE,+DAA+D;AAC3F,KAAK;AACL,CAAC,CAAC;AACF,OAAO,CAAC,MAAM,GAAG,IAAI,OAAO,CAAC,uBAAuB,EAAE,kCAAkC,EAAE,uBAAuB,CAAC,qBAAqB,CAAC,CAAC;AACzI,MAAM,mBAAmB,GAAG,MAAM;AAClC,IAAI,IAAI,OAAO,CAAC,MAAM,EAAE,IAAI,uBAAuB,CAAC,aAAa,GAAG,EAAE,mCAAmC,CAAC,cAAc,CAAC,CAAC;AAC1H,CAAC,CAAC;AACF,OAAO,CAAC,mBAAmB,GAAG,mBAAmB;;"}