import { ConsoleLogger } from '@aws-amplify/core';
import type { InAppMessageCampaign as PinpointInAppMessage } from '@aws-amplify/core/internals/aws-clients/pinpoint';
import { InAppMessage, InAppMessageContent, InAppMessageLayout, InAppMessagingEvent } from '../../../types';
import { MetricsComparator, PinpointMessageEvent } from '../types';
import { ButtonConfigPlatform } from '../../../types/message';
export declare const logger: ConsoleLogger;
export declare const recordAnalyticsEvent: (event: PinpointMessageEvent, message: InAppMessage) => void;
export declare const getStartOfDay: () => string;
export declare const matchesEventType: ({ CampaignId, Schedule }: PinpointInAppMessage, { name: eventType }: InAppMessagingEvent) => boolean;
export declare const matchesAttributes: ({ CampaignId, Schedule }: PinpointInAppMessage, { attributes }: InAppMessagingEvent) => boolean;
export declare const matchesMetrics: ({ CampaignId, Schedule }: PinpointInAppMessage, { metrics }: InAppMessagingEvent) => boolean;
export declare const getComparator: (operator?: string) => MetricsComparator | undefined;
export declare const isBeforeEndDate: ({ Schedule, }: PinpointInAppMessage) => boolean;
export declare const isQuietTime: (message: PinpointInAppMessage) => boolean;
export declare const clearMemo: () => void;
export declare const interpretLayout: (layout: NonNullable<PinpointInAppMessage['InAppMessage']>['Layout']) => InAppMessageLayout;
export declare const extractContent: ({ InAppMessage: message, }: PinpointInAppMessage) => InAppMessageContent[];
export declare const extractMetadata: ({ InAppMessage: inAppMessage, Priority, Schedule, TreatmentId, }: PinpointInAppMessage) => InAppMessage['metadata'];
export declare const mapOSPlatform: (os?: string) => ButtonConfigPlatform;
