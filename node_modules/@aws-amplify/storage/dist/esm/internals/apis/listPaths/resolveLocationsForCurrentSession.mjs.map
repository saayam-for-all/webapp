{"version":3,"file":"resolveLocationsForCurrentSession.mjs","sources":["../../../../../src/internals/apis/listPaths/resolveLocationsForCurrentSession.ts"],"sourcesContent":["import { ENTITY_IDENTITY_URL } from '../../utils/constants';\nconst resolvePermissions = (accessRule, isAuthenticated, groups) => {\n    if (!isAuthenticated) {\n        return {\n            permission: accessRule.guest,\n        };\n    }\n    if (groups) {\n        const selectedKey = Object.keys(accessRule).find(access => access.includes(groups));\n        return {\n            permission: selectedKey ? accessRule[selectedKey] : undefined,\n        };\n    }\n    return {\n        permission: accessRule.authenticated,\n    };\n};\nexport const resolveLocationsForCurrentSession = ({ buckets, isAuthenticated, identityId, userGroup, }) => {\n    const locations = [];\n    for (const [, bucketInfo] of Object.entries(buckets)) {\n        const { bucketName, paths } = bucketInfo;\n        if (!paths) {\n            continue;\n        }\n        for (const [path, accessRules] of Object.entries(paths)) {\n            const shouldIncludeEntityIdPath = !userGroup &&\n                path.includes(ENTITY_IDENTITY_URL) &&\n                isAuthenticated &&\n                identityId;\n            if (shouldIncludeEntityIdPath) {\n                locations.push({\n                    type: 'PREFIX',\n                    permission: accessRules.entityidentity,\n                    bucket: bucketName,\n                    prefix: path.replace(ENTITY_IDENTITY_URL, identityId),\n                });\n            }\n            const location = {\n                type: 'PREFIX',\n                ...resolvePermissions(accessRules, isAuthenticated, userGroup),\n                bucket: bucketName,\n                prefix: path,\n            };\n            if (location.permission)\n                locations.push(location);\n        }\n    }\n    return locations;\n};\n"],"names":[],"mappings":";;AACA,MAAM,kBAAkB,GAAG,CAAC,UAAU,EAAE,eAAe,EAAE,MAAM,KAAK;AACpE,IAAI,IAAI,CAAC,eAAe,EAAE;AAC1B,QAAQ,OAAO;AACf,YAAY,UAAU,EAAE,UAAU,CAAC,KAAK;AACxC,SAAS,CAAC;AACV,KAAK;AACL,IAAI,IAAI,MAAM,EAAE;AAChB,QAAQ,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;AAC5F,QAAQ,OAAO;AACf,YAAY,UAAU,EAAE,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC,GAAG,SAAS;AACzE,SAAS,CAAC;AACV,KAAK;AACL,IAAI,OAAO;AACX,QAAQ,UAAU,EAAE,UAAU,CAAC,aAAa;AAC5C,KAAK,CAAC;AACN,CAAC,CAAC;AACU,MAAC,iCAAiC,GAAG,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,UAAU,EAAE,SAAS,GAAG,KAAK;AAC3G,IAAI,MAAM,SAAS,GAAG,EAAE,CAAC;AACzB,IAAI,KAAK,MAAM,GAAG,UAAU,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AAC1D,QAAQ,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,GAAG,UAAU,CAAC;AACjD,QAAQ,IAAI,CAAC,KAAK,EAAE;AACpB,YAAY,SAAS;AACrB,SAAS;AACT,QAAQ,KAAK,MAAM,CAAC,IAAI,EAAE,WAAW,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACjE,YAAY,MAAM,yBAAyB,GAAG,CAAC,SAAS;AACxD,gBAAgB,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC;AAClD,gBAAgB,eAAe;AAC/B,gBAAgB,UAAU,CAAC;AAC3B,YAAY,IAAI,yBAAyB,EAAE;AAC3C,gBAAgB,SAAS,CAAC,IAAI,CAAC;AAC/B,oBAAoB,IAAI,EAAE,QAAQ;AAClC,oBAAoB,UAAU,EAAE,WAAW,CAAC,cAAc;AAC1D,oBAAoB,MAAM,EAAE,UAAU;AACtC,oBAAoB,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,UAAU,CAAC;AACzE,iBAAiB,CAAC,CAAC;AACnB,aAAa;AACb,YAAY,MAAM,QAAQ,GAAG;AAC7B,gBAAgB,IAAI,EAAE,QAAQ;AAC9B,gBAAgB,GAAG,kBAAkB,CAAC,WAAW,EAAE,eAAe,EAAE,SAAS,CAAC;AAC9E,gBAAgB,MAAM,EAAE,UAAU;AAClC,gBAAgB,MAAM,EAAE,IAAI;AAC5B,aAAa,CAAC;AACd,YAAY,IAAI,QAAQ,CAAC,UAAU;AACnC,gBAAgB,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACzC,SAAS;AACT,KAAK;AACL,IAAI,OAAO,SAAS,CAAC;AACrB;;;;"}