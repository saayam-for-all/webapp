{"version":3,"file":"completeMultipartUpload.js","sources":["../../../../../../../src/providers/s3/utils/client/s3data/completeMultipartUpload.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.completeMultipartUpload = void 0;\nconst aws_client_utils_1 = require(\"@aws-amplify/core/internals/aws-client-utils\");\nconst utils_1 = require(\"@aws-amplify/core/internals/utils\");\nconst composers_1 = require(\"@aws-amplify/core/internals/aws-client-utils/composers\");\nconst utils_2 = require(\"../utils\");\nconst validateObjectUrl_1 = require(\"../../validateObjectUrl\");\nconst validateMultipartUploadXML_1 = require(\"../../validateMultipartUploadXML\");\nconst base_1 = require(\"./base\");\nconst INVALID_PARAMETER_ERROR_MSG = 'Invalid parameter for CompleteMultipartUpload API';\nconst MISSING_ETAG_ERROR_MSG = 'ETag missing from multipart upload';\nconst MISSING_ETAG_ERROR_SUGGESTION = 'Please ensure S3 bucket CORS configuration includes ETag as part of its `ExposeHeaders` element';\nconst completeMultipartUploadSerializer = async (input, endpoint) => {\n    const headers = {\n        'content-type': 'application/xml',\n        ...(0, utils_2.assignStringVariables)({\n            'x-amz-checksum-crc32': input.ChecksumCRC32,\n            'x-amz-expected-bucket-owner': input.ExpectedBucketOwner,\n            'If-None-Match': input.IfNoneMatch,\n        }),\n    };\n    const url = new utils_1.AmplifyUrl(endpoint.url.toString());\n    (0, utils_2.validateS3RequiredParameter)(!!input.Key, 'Key');\n    url.pathname = (0, utils_2.serializePathnameObjectKey)(url, input.Key);\n    (0, utils_2.validateS3RequiredParameter)(!!input.UploadId, 'UploadId');\n    url.search = new utils_1.AmplifyUrlSearchParams({\n        uploadId: input.UploadId,\n    }).toString();\n    (0, utils_2.validateS3RequiredParameter)(!!input.MultipartUpload, 'MultipartUpload');\n    (0, validateObjectUrl_1.validateObjectUrl)({\n        bucketName: input.Bucket,\n        key: input.Key,\n        objectURL: url,\n    });\n    const xml = serializeCompletedMultipartUpload(input.MultipartUpload);\n    (0, validateMultipartUploadXML_1.validateMultipartUploadXML)(input.MultipartUpload, xml);\n    return {\n        method: 'POST',\n        headers,\n        url,\n        body: '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' + xml,\n    };\n};\nconst serializeCompletedMultipartUpload = (input) => {\n    if (!input.Parts?.length) {\n        throw new Error(`${INVALID_PARAMETER_ERROR_MSG}: ${JSON.stringify(input)}`);\n    }\n    return `<CompleteMultipartUpload xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">${input.Parts.map(serializeCompletedPartList).join('')}</CompleteMultipartUpload>`;\n};\nconst serializeCompletedPartList = (input) => {\n    if (input.PartNumber == null) {\n        throw new Error(`${INVALID_PARAMETER_ERROR_MSG}: ${JSON.stringify(input)}`);\n    }\n    if (!input.ETag) {\n        throw new Error(`${MISSING_ETAG_ERROR_MSG}: ${JSON.stringify(input)}. ${MISSING_ETAG_ERROR_SUGGESTION}`);\n    }\n    const eTag = `<ETag>${input.ETag}</ETag>`;\n    const partNumber = `<PartNumber>${input.PartNumber}</PartNumber>`;\n    const checksumCRC32 = input.ChecksumCRC32\n        ? `<ChecksumCRC32>${input.ChecksumCRC32}</ChecksumCRC32>`\n        : '';\n    return `<Part>${eTag}${partNumber}${checksumCRC32}</Part>`;\n};\n/**\n * Parse CompleteMultipartUpload API response payload, which may be empty or error indicating internal\n * server error, even when the status code is 200.\n *\n * Ref: https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html#API_CompleteMultipartUpload_Example_4\n */\nconst parseXmlBodyOrThrow = async (response) => {\n    const parsed = await (0, utils_2.parseXmlBody)(response); // Handles empty body case\n    if (parsed.Code !== undefined && parsed.Message !== undefined) {\n        const error = (await (0, base_1.parseXmlError)({\n            ...response,\n            statusCode: 500, // To workaround the >=300 status code check common to other APIs.\n        }));\n        throw (0, utils_2.buildStorageServiceError)(error, response.statusCode);\n    }\n    return parsed;\n};\nconst completeMultipartUploadDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = (await (0, base_1.parseXmlError)(response));\n        throw (0, utils_2.buildStorageServiceError)(error, response.statusCode);\n    }\n    else {\n        const parsed = await parseXmlBodyOrThrow(response);\n        const contents = (0, utils_2.map)(parsed, {\n            ETag: 'ETag',\n            Key: 'Key',\n            Location: 'Location',\n        });\n        return {\n            $metadata: (0, aws_client_utils_1.parseMetadata)(response),\n            ...contents,\n        };\n    }\n};\n// CompleteMultiPartUpload API returns 200 status code with empty body or error message.\n// This indicates internal server error after the response has been sent to the client.\n// Ref: https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html#API_CompleteMultipartUpload_Example_4\nconst retryWhenErrorWith200StatusCode = async (response, error, middlewareContext) => {\n    if (!response) {\n        return { retryable: false };\n    }\n    if (response.statusCode === 200) {\n        if (!response.body) {\n            return { retryable: true };\n        }\n        const parsed = await (0, utils_2.parseXmlBody)(response);\n        if (parsed.Code !== undefined && parsed.Message !== undefined) {\n            return { retryable: true };\n        }\n        return { retryable: false };\n    }\n    return (0, base_1.retryDecider)(response, error, middlewareContext);\n};\nexports.completeMultipartUpload = (0, composers_1.composeServiceApi)(utils_2.s3TransferHandler, completeMultipartUploadSerializer, completeMultipartUploadDeserializer, {\n    ...base_1.defaultConfig,\n    responseType: 'text',\n    retryDecider: retryWhenErrorWith200StatusCode,\n});\n"],"names":[],"mappings":"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"}