{"version":3,"file":"resolveS3ConfigAndInput.js","sources":["../../../../../src/providers/s3/utils/resolveS3ConfigAndInput.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveS3ConfigAndInput = void 0;\nconst assertValidationError_1 = require(\"../../../errors/utils/assertValidationError\");\nconst validation_1 = require(\"../../../errors/types/validation\");\nconst resolvePrefix_1 = require(\"../../../utils/resolvePrefix\");\nconst StorageError_1 = require(\"../../../errors/StorageError\");\nconst constants_1 = require(\"../../../errors/constants\");\nconst constants_2 = require(\"./constants\");\n/**\n * resolve the common input options for S3 API handlers from Amplify configuration and library options.\n *\n * @param {AmplifyClassV6} amplify The Amplify instance.\n * @param {S3ApiOptions} apiOptions The input options for S3 provider.\n * @returns {Promise<ResolvedS3ConfigAndInput>} The resolved common input options for S3 API handlers.\n * @throws A `StorageError` with `error.name` from `StorageValidationErrorCode` indicating invalid\n *   configurations or Amplify library options.\n *\n * @internal\n */\nconst resolveS3ConfigAndInput = async (amplify, apiInput) => {\n    const { options: apiOptions } = apiInput ?? {};\n    /**\n     * IdentityId is always cached in memory so we can safely make calls here. It\n     * should be stable even for unauthenticated users, regardless of credentials.\n     */\n    const { identityId } = await amplify.Auth.fetchAuthSession();\n    /**\n     * A credentials provider function instead of a static credentials object is\n     * used because the long-running tasks like multipart upload may span over the\n     * credentials expiry. Auth.fetchAuthSession() automatically refreshes the\n     * credentials if they are expired.\n     *\n     * The optional forceRefresh option is set when the S3 service returns expired\n     * tokens error in the previous API call attempt.\n     */\n    const credentialsProvider = async (options) => {\n        if (isLocationCredentialsProvider(apiOptions)) {\n            assertStorageInput(apiInput);\n        }\n        // TODO: forceRefresh option of fetchAuthSession would refresh both tokens and\n        // AWS credentials. So we do not support forceRefreshing from the Auth until\n        // we support refreshing only the credentials.\n        const { credentials } = isLocationCredentialsProvider(apiOptions)\n            ? await apiOptions.locationCredentialsProvider(options)\n            : await amplify.Auth.fetchAuthSession();\n        (0, assertValidationError_1.assertValidationError)(!!credentials, validation_1.StorageValidationErrorCode.NoCredentials);\n        return credentials;\n    };\n    const { bucket: defaultBucket, region: defaultRegion, dangerouslyConnectToHttpEndpointForTesting, buckets, } = amplify.getConfig()?.Storage?.S3 ?? {};\n    const { bucket = defaultBucket, region = defaultRegion } = (apiOptions?.bucket && resolveBucketConfig(apiOptions, buckets)) || {};\n    (0, assertValidationError_1.assertValidationError)(!!bucket, validation_1.StorageValidationErrorCode.NoBucket);\n    (0, assertValidationError_1.assertValidationError)(!!region, validation_1.StorageValidationErrorCode.NoRegion);\n    const { defaultAccessLevel, prefixResolver = resolvePrefix_1.resolvePrefix, isObjectLockEnabled, } = amplify.libraryOptions?.Storage?.S3 ?? {};\n    const accessLevel = apiOptions?.accessLevel ?? defaultAccessLevel ?? constants_2.DEFAULT_ACCESS_LEVEL;\n    const targetIdentityId = accessLevel === 'protected'\n        ? (apiOptions?.targetIdentityId ?? identityId)\n        : identityId;\n    const keyPrefix = await prefixResolver({ accessLevel, targetIdentityId });\n    return {\n        s3Config: {\n            credentials: credentialsProvider,\n            region,\n            useAccelerateEndpoint: apiOptions?.useAccelerateEndpoint,\n            ...(apiOptions?.customEndpoint\n                ? { customEndpoint: apiOptions.customEndpoint }\n                : {}),\n            ...(dangerouslyConnectToHttpEndpointForTesting\n                ? {\n                    customEndpoint: constants_2.LOCAL_TESTING_S3_ENDPOINT,\n                    forcePathStyle: true,\n                }\n                : {}),\n        },\n        bucket,\n        keyPrefix,\n        identityId,\n        isObjectLockEnabled,\n    };\n};\nexports.resolveS3ConfigAndInput = resolveS3ConfigAndInput;\nconst isLocationCredentialsProvider = (options) => {\n    return !!options?.locationCredentialsProvider;\n};\nconst isInputWithCallbackPath = (input) => {\n    return ((input?.path &&\n        typeof input.path === 'function') ||\n        (input?.destination?.path &&\n            typeof input.destination?.path === 'function') ||\n        (input?.source?.path &&\n            typeof input.source?.path === 'function'));\n};\nconst isDeprecatedInput = (input) => {\n    return (isInputWithKey(input) ||\n        isInputWithPrefix(input) ||\n        isInputWithCopySourceOrDestination(input));\n};\nconst assertStorageInput = (input) => {\n    if (isDeprecatedInput(input) || isInputWithCallbackPath(input)) {\n        throw new StorageError_1.StorageError({\n            name: constants_1.INVALID_STORAGE_INPUT,\n            message: 'The input needs to have a path as a string value.',\n            recoverySuggestion: 'Please provide a valid path as a string value for the input.',\n        });\n    }\n};\nconst isInputWithKey = (input) => {\n    return !!(typeof input.key === 'string');\n};\nconst isInputWithPrefix = (input) => {\n    return !!(typeof input.prefix === 'string');\n};\nconst isInputWithCopySourceOrDestination = (input) => {\n    return !!(typeof input.source?.key === 'string' ||\n        typeof input.destination?.key === 'string');\n};\nconst resolveBucketConfig = (apiOptions, buckets) => {\n    if (typeof apiOptions.bucket === 'string') {\n        const bucketConfig = buckets?.[apiOptions.bucket];\n        (0, assertValidationError_1.assertValidationError)(!!bucketConfig, validation_1.StorageValidationErrorCode.InvalidStorageBucket);\n        return { bucket: bucketConfig.bucketName, region: bucketConfig.region };\n    }\n    if (typeof apiOptions.bucket === 'object') {\n        return {\n            bucket: apiOptions.bucket.bucketName,\n            region: apiOptions.bucket.region,\n        };\n    }\n};\n"],"names":[],"mappings":"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"}