{"version":3,"file":"createRetryDecider.js","sources":["../../../../../../../src/providers/s3/utils/client/utils/createRetryDecider.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createRetryDecider = void 0;\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst aws_client_utils_1 = require(\"@aws-amplify/core/internals/aws-client-utils\");\n/**\n * Factory of a {@link RetryDecider} function.\n *\n * @param errorParser function to parse HTTP response wth XML payload to JS\n * \tError instance.\n * @returns A structure indicating if the response is retryable; And if it is a\n * \tCredentialsExpiredError\n */\nconst createRetryDecider = (errorParser) => async (response, error, middlewareContext) => {\n    const defaultRetryDecider = (0, aws_client_utils_1.getRetryDecider)(errorParser);\n    const defaultRetryDecision = await defaultRetryDecider(response, error);\n    if (!response) {\n        return { retryable: defaultRetryDecision.retryable };\n    }\n    const parsedError = await errorParser(response);\n    const errorCode = parsedError?.name;\n    const errorMessage = parsedError?.message;\n    const isCredentialsExpired = isCredentialsExpiredError(errorCode, errorMessage);\n    return {\n        retryable: defaultRetryDecision.retryable ||\n            // If we know the previous retry attempt sets isCredentialsExpired in the\n            // middleware context, we don't want to retry anymore.\n            !!(isCredentialsExpired && !middlewareContext?.isCredentialsExpired),\n        isCredentialsExpiredError: isCredentialsExpired,\n    };\n};\nexports.createRetryDecider = createRetryDecider;\n// Ref: https://github.com/aws/aws-sdk-js/blob/54829e341181b41573c419bd870dd0e0f8f10632/lib/event_listeners.js#L522-L541\nconst INVALID_TOKEN_ERROR_CODES = [\n    'RequestExpired',\n    'ExpiredTokenException',\n    'ExpiredToken',\n];\n/**\n * Given an error code, returns true if it is related to invalid credentials.\n *\n * @param errorCode String representation of some error.\n * @returns True if given error indicates the credentials used to authorize request\n * are invalid.\n */\nconst isCredentialsExpiredError = (errorCode, errorMessage) => {\n    const isExpiredTokenError = !!errorCode && INVALID_TOKEN_ERROR_CODES.includes(errorCode);\n    // Ref: https://github.com/aws/aws-sdk-js/blob/54829e341181b41573c419bd870dd0e0f8f10632/lib/event_listeners.js#L536-L539\n    const isExpiredSignatureError = !!errorCode &&\n        !!errorMessage &&\n        errorCode.includes('Signature') &&\n        errorMessage.includes('expired');\n    return isExpiredTokenError || isExpiredSignatureError;\n};\n"],"names":[],"mappings":";;AACA,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,OAAO,CAAC,kBAAkB,GAAG,KAAK,CAAC,CAAC;AACpC;AACA;AACA,MAAM,kBAAkB,GAAG,OAAO,CAAC,8CAA8C,CAAC,CAAC;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kBAAkB,GAAG,CAAC,WAAW,KAAK,OAAO,QAAQ,EAAE,KAAK,EAAE,iBAAiB,KAAK;AAC1F,IAAI,MAAM,mBAAmB,GAAG,IAAI,kBAAkB,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;AACrF,IAAI,MAAM,oBAAoB,GAAG,MAAM,mBAAmB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;AAC5E,IAAI,IAAI,CAAC,QAAQ,EAAE;AACnB,QAAQ,OAAO,EAAE,SAAS,EAAE,oBAAoB,CAAC,SAAS,EAAE,CAAC;AAC7D,KAAK;AACL,IAAI,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,QAAQ,CAAC,CAAC;AACpD,IAAI,MAAM,SAAS,GAAG,WAAW,EAAE,IAAI,CAAC;AACxC,IAAI,MAAM,YAAY,GAAG,WAAW,EAAE,OAAO,CAAC;AAC9C,IAAI,MAAM,oBAAoB,GAAG,yBAAyB,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;AACpF,IAAI,OAAO;AACX,QAAQ,SAAS,EAAE,oBAAoB,CAAC,SAAS;AACjD;AACA;AACA,YAAY,CAAC,EAAE,oBAAoB,IAAI,CAAC,iBAAiB,EAAE,oBAAoB,CAAC;AAChF,QAAQ,yBAAyB,EAAE,oBAAoB;AACvD,KAAK,CAAC;AACN,CAAC,CAAC;AACF,OAAO,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;AAChD;AACA,MAAM,yBAAyB,GAAG;AAClC,IAAI,gBAAgB;AACpB,IAAI,uBAAuB;AAC3B,IAAI,cAAc;AAClB,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,yBAAyB,GAAG,CAAC,SAAS,EAAE,YAAY,KAAK;AAC/D,IAAI,MAAM,mBAAmB,GAAG,CAAC,CAAC,SAAS,IAAI,yBAAyB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC7F;AACA,IAAI,MAAM,uBAAuB,GAAG,CAAC,CAAC,SAAS;AAC/C,QAAQ,CAAC,CAAC,YAAY;AACtB,QAAQ,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC;AACvC,QAAQ,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AACzC,IAAI,OAAO,mBAAmB,IAAI,uBAAuB,CAAC;AAC1D,CAAC;;"}