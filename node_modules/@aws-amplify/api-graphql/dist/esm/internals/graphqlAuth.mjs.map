{"version":3,"file":"graphqlAuth.mjs","sources":["../../../src/internals/graphqlAuth.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { GraphQLApiError } from '../utils/errors';\nimport { NO_API_KEY, NO_AUTH_TOKEN_HEADER, NO_SIGNED_IN_USER, NO_VALID_AUTH_TOKEN, NO_VALID_CREDENTIALS, } from '../utils/errors/constants';\nexport async function headerBasedAuth(amplify, authMode, apiKey, additionalHeaders = {}) {\n    let headers = {};\n    switch (authMode) {\n        case 'apiKey':\n            if (!apiKey) {\n                throw new GraphQLApiError(NO_API_KEY);\n            }\n            headers = {\n                'X-Api-Key': apiKey,\n            };\n            break;\n        case 'iam': {\n            const session = await amplify.Auth.fetchAuthSession();\n            if (session.credentials === undefined) {\n                throw new GraphQLApiError(NO_VALID_CREDENTIALS);\n            }\n            break;\n        }\n        case 'oidc':\n        case 'userPool': {\n            let token;\n            try {\n                token = (await amplify.Auth.fetchAuthSession()).tokens?.accessToken.toString();\n            }\n            catch (e) {\n                // fetchAuthSession failed\n                throw new GraphQLApiError({\n                    ...NO_SIGNED_IN_USER,\n                    underlyingError: e,\n                });\n            }\n            // `fetchAuthSession()` succeeded but didn't return `tokens`.\n            // This may happen when unauthenticated access is enabled and there is\n            // no user signed in.\n            if (!token) {\n                throw new GraphQLApiError(NO_VALID_AUTH_TOKEN);\n            }\n            headers = {\n                Authorization: token,\n            };\n            break;\n        }\n        case 'lambda':\n            if (typeof additionalHeaders === 'object' &&\n                !additionalHeaders.Authorization) {\n                throw new GraphQLApiError(NO_AUTH_TOKEN_HEADER);\n            }\n            headers = {\n                Authorization: additionalHeaders.Authorization,\n            };\n            break;\n        case 'none':\n            break;\n        default:\n            break;\n    }\n    return headers;\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAGO,eAAe,eAAe,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,iBAAiB,GAAG,EAAE,EAAE;AACzF,IAAI,IAAI,OAAO,GAAG,EAAE,CAAC;AACrB,IAAI,QAAQ,QAAQ;AACpB,QAAQ,KAAK,QAAQ;AACrB,YAAY,IAAI,CAAC,MAAM,EAAE;AACzB,gBAAgB,MAAM,IAAI,eAAe,CAAC,UAAU,CAAC,CAAC;AACtD,aAAa;AACb,YAAY,OAAO,GAAG;AACtB,gBAAgB,WAAW,EAAE,MAAM;AACnC,aAAa,CAAC;AACd,YAAY,MAAM;AAClB,QAAQ,KAAK,KAAK,EAAE;AACpB,YAAY,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAClE,YAAY,IAAI,OAAO,CAAC,WAAW,KAAK,SAAS,EAAE;AACnD,gBAAgB,MAAM,IAAI,eAAe,CAAC,oBAAoB,CAAC,CAAC;AAChE,aAAa;AACb,YAAY,MAAM;AAClB,SAAS;AACT,QAAQ,KAAK,MAAM,CAAC;AACpB,QAAQ,KAAK,UAAU,EAAE;AACzB,YAAY,IAAI,KAAK,CAAC;AACtB,YAAY,IAAI;AAChB,gBAAgB,KAAK,GAAG,CAAC,MAAM,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,WAAW,CAAC,QAAQ,EAAE,CAAC;AAC/F,aAAa;AACb,YAAY,OAAO,CAAC,EAAE;AACtB;AACA,gBAAgB,MAAM,IAAI,eAAe,CAAC;AAC1C,oBAAoB,GAAG,iBAAiB;AACxC,oBAAoB,eAAe,EAAE,CAAC;AACtC,iBAAiB,CAAC,CAAC;AACnB,aAAa;AACb;AACA;AACA;AACA,YAAY,IAAI,CAAC,KAAK,EAAE;AACxB,gBAAgB,MAAM,IAAI,eAAe,CAAC,mBAAmB,CAAC,CAAC;AAC/D,aAAa;AACb,YAAY,OAAO,GAAG;AACtB,gBAAgB,aAAa,EAAE,KAAK;AACpC,aAAa,CAAC;AACd,YAAY,MAAM;AAClB,SAAS;AACT,QAAQ,KAAK,QAAQ;AACrB,YAAY,IAAI,OAAO,iBAAiB,KAAK,QAAQ;AACrD,gBAAgB,CAAC,iBAAiB,CAAC,aAAa,EAAE;AAClD,gBAAgB,MAAM,IAAI,eAAe,CAAC,oBAAoB,CAAC,CAAC;AAChE,aAAa;AACb,YAAY,OAAO,GAAG;AACtB,gBAAgB,aAAa,EAAE,iBAAiB,CAAC,aAAa;AAC9D,aAAa,CAAC;AACd,YAAY,MAAM;AAKlB,KAAK;AACL,IAAI,OAAO,OAAO,CAAC;AACnB;;;;"}