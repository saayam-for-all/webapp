{"version":3,"file":"getPasskey.mjs","sources":["../../../../../src/client/utils/passkey/getPasskey.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { PasskeyErrorCode, assertPasskeyError, handlePasskeyAuthenticationError, } from './errors';\nimport { getIsPasskeySupported } from './getIsPasskeySupported';\nimport { deserializeJsonToPkcGetOptions, serializePkcWithAssertionToJson, } from './serde';\nimport { assertCredentialIsPkcWithAuthenticatorAssertionResponse, } from './types';\nexport const getPasskey = async (input) => {\n    try {\n        const isPasskeySupported = getIsPasskeySupported();\n        assertPasskeyError(isPasskeySupported, PasskeyErrorCode.PasskeyNotSupported);\n        const passkeyGetOptions = deserializeJsonToPkcGetOptions(input);\n        const credential = await navigator.credentials.get({\n            publicKey: passkeyGetOptions,\n        });\n        assertCredentialIsPkcWithAuthenticatorAssertionResponse(credential);\n        return serializePkcWithAssertionToJson(credential);\n    }\n    catch (err) {\n        throw handlePasskeyAuthenticationError(err);\n    }\n};\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAKY,MAAC,UAAU,GAAG,OAAO,KAAK,KAAK;AAC3C,IAAI,IAAI;AACR,QAAQ,MAAM,kBAAkB,GAAG,qBAAqB,EAAE,CAAC;AAC3D,QAAQ,kBAAkB,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,mBAAmB,CAAC,CAAC;AACrF,QAAQ,MAAM,iBAAiB,GAAG,8BAA8B,CAAC,KAAK,CAAC,CAAC;AACxE,QAAQ,MAAM,UAAU,GAAG,MAAM,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC;AAC3D,YAAY,SAAS,EAAE,iBAAiB;AACxC,SAAS,CAAC,CAAC;AACX,QAAQ,uDAAuD,CAAC,UAAU,CAAC,CAAC;AAC5E,QAAQ,OAAO,+BAA+B,CAAC,UAAU,CAAC,CAAC;AAC3D,KAAK;AACL,IAAI,OAAO,GAAG,EAAE;AAChB,QAAQ,MAAM,gCAAgC,CAAC,GAAG,CAAC,CAAC;AACpD,KAAK;AACL;;;;"}