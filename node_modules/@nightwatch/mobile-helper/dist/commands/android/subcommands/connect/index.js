"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.connect = void 0;
const inquirer_1 = __importDefault(require("inquirer"));
const logger_1 = __importDefault(require("../../../../logger"));
const common_1 = require("../common");
const emulator_1 = require("./emulator");
const wireless_1 = require("./wireless");
async function connect(options, sdkRoot, platform) {
    const verifyResult = (0, common_1.verifyOptions)('connect', options);
    if (!verifyResult) {
        return false;
    }
    let subcommandFlag = verifyResult.subcommandFlag;
    if (subcommandFlag === '') {
        await (0, common_1.showConnectedRealDevices)();
        await (0, common_1.showConnectedEmulators)();
        subcommandFlag = await promptForFlag();
    }
    else if (subcommandFlag === 'wireless') {
        await (0, common_1.showConnectedRealDevices)();
    }
    else if (subcommandFlag === 'emulator') {
        await (0, common_1.showConnectedEmulators)();
    }
    if (subcommandFlag === 'wireless') {
        return await (0, wireless_1.connectWirelessAdb)(sdkRoot, platform);
    }
    else if (subcommandFlag === 'emulator') {
        return await (0, emulator_1.connectAVD)(options, sdkRoot, platform);
    }
    return false;
}
exports.connect = connect;
async function promptForFlag() {
    const flagAnswer = await inquirer_1.default.prompt({
        type: 'list',
        name: 'flag',
        message: 'Select the device to connect to:',
        choices: [
            { name: 'Real device', value: 'wireless' },
            { name: 'Emulator', value: 'emulator' }
        ]
    });
    logger_1.default.log();
    return flagAnswer.flag;
}
