"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.uninstall = void 0;
const inquirer_1 = __importDefault(require("inquirer"));
const logger_1 = __importDefault(require("../../../../logger"));
const common_1 = require("../common");
const app_1 = require("./app");
const avd_1 = require("./avd");
const system_image_1 = require("./system-image");
async function uninstall(options, sdkRoot, platform) {
    const optionsVerified = (0, common_1.verifyOptions)('uninstall', options);
    if (!optionsVerified) {
        return false;
    }
    let subcommandFlag = optionsVerified.subcommandFlag;
    if (subcommandFlag === '') {
        subcommandFlag = await promptForFlag();
    }
    if (subcommandFlag === 'app') {
        return await (0, app_1.uninstallApp)(options, sdkRoot, platform);
    }
    else if (subcommandFlag === 'avd') {
        return await (0, avd_1.deleteAvd)(sdkRoot, platform);
    }
    else if (subcommandFlag === 'system-image') {
        return await (0, system_image_1.deleteSystemImage)(sdkRoot, platform);
    }
    return false;
}
exports.uninstall = uninstall;
async function promptForFlag() {
    const flagAnswer = await inquirer_1.default.prompt({
        type: 'list',
        name: 'flag',
        message: 'Select what you want to uninstall:',
        choices: [
            { name: 'Android app', value: 'app' },
            { name: 'Android Virtual Device (AVD)', value: 'avd' },
            { name: 'System image', value: 'system-image' }
        ]
    });
    logger_1.default.log();
    return flagAnswer.flag;
}
