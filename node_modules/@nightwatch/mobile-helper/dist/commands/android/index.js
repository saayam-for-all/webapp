"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleAndroidCommand = void 0;
const ansi_colors_1 = __importDefault(require("ansi-colors"));
const androidSetup_1 = require("./androidSetup");
const subcommands_1 = require("./subcommands");
const help_1 = require("./subcommands/help");
const dotcommands_1 = require("./dotcommands");
function handleAndroidCommand(args, options, argv) {
    if (args[0].includes('.')) {
        // Here args[0] represents the android dot command
        const androidDotCommand = new dotcommands_1.AndroidDotCommand(args[0], argv, process.cwd());
        androidDotCommand.run();
    }
    else if (args.length === 1) {
        const androidSetup = new androidSetup_1.AndroidSetup(options);
        androidSetup.run();
    }
    else if (args.length === 2) {
        // Here args[1] represents the android subcommand.
        const androidSubcommand = new subcommands_1.AndroidSubcommand(args[1], options);
        androidSubcommand.run();
    }
    else {
        // android command doesn't accept more than one argument.
        console.log(`${ansi_colors_1.default.red(`Too many arguments passed for 'android' command: ${args.slice(1).join(', ')}`)}\n`);
        console.log((0, help_1.getSubcommandHelp)());
    }
}
exports.handleAndroidCommand = handleAndroidCommand;
